# Hashing

1. Sub Array with sum = 0:
    * Calculate Psum array;
    * If Psum contains 0 or repeated value, means there is an subarray with sum =0; 
    * Iterate on psum arr store each element in Hashset, help to get repetitive and 0's. (for identify o - initialize Hashset with 0).
        ar[] = [ 2, 2, 1, -3, 4, 3, 1, -2, -3, 2]
      psum[] = [ 2, 4, 5, 2, 6, 9, 10, 8, 5, 7]
      ar[2] = 5; ar[8] = 5;
      it means,
              psum[8] = sum[0-2] + sum[3-8];
                5  =  5 + 0;   So, sub array sum of [3-8] = 5;

2. Identify the first repeating element :
      * Iterate on arr from last ind -> first index -> update repeating element in global variable.

3. Subarray with sum = k:
      * Psum approach - O(N^2) : O(N);
      * Carry forward approach - O(N^2);
      * Storing current psum in a variable -> check target values in psums HashMap.(psum-k = target);
      * HashMap + Psum -> O(N) : O(N)
         * No of subarrays with sum = k -> Using hashMap for stroing how namy pairs possible.
         * Subarray sum present or not using -> Using Hashset.
